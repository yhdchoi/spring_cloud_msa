plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.4'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.yhdc'
version = '1.0.0'

//def avroGeneratedDir = layout.buildDirectory.dir("avroGenerated")
//sourceSets.main.java.srcDir(avroGeneratedDir)

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
//    avroTools {
//        transitive = false // Ensures only the primary JAR is included
//    }
}

repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', "2024.0.1")
}

dependencies {
    // WEB
    implementation 'org.springframework.boot:spring-boot-starter-web'

    // DATA
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'

    // LOAD BALANCING
    implementation 'org.springframework.cloud:spring-cloud-starter-circuitbreaker-resilience4j'

    // KAFKA
    implementation 'org.springframework.kafka:spring-kafka'
    implementation 'io.confluent:kafka-schema-registry-client:7.9.0'
//    implementation 'io.confluent:kafka-avro-serializer:7.9.0'
//    implementation 'org.apache.avro:avro:1.12.0'
//    implementation 'org.apache.avro:avro-tools:1.12.0'

    // CONFIG
    implementation 'org.springframework.cloud:spring-cloud-starter-config'

    // SWAGGER
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.6'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-api:2.8.6'

    // MONITOR
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    // TOOL
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'

    // TEST
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.kafka:spring-kafka-test'
    testImplementation 'org.springframework.boot:spring-boot-testcontainers'
    testImplementation 'org.testcontainers:mongodb'
    testImplementation 'org.testcontainers:kafka'
    testImplementation 'org.testcontainers:junit-jupiter'
    testImplementation 'io.rest-assured:rest-assured'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

tasks.named('test') {
    jvmArgs("-XX:+EnableDynamicAgentLoading")
    useJUnitPlatform()
}

//tasks.register("avroCompileSchema", JavaExec) {
//    classpath(configurations.avroTools)
//    args(
//            "compile",
//            "schema",
//            "src/main/resources/avro/",
//            avroGeneratedDir.get().asFile.canonicalPath
//    )
//}
