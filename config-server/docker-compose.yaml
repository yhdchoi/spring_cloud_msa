services:
  ### MAIN DB
  mariadb-account:
    image: mariadb:latest
    container_name: account-db
    ports:
      - "3307:3306"
    environment:
      MYSQL_DATABASE: main_db
      MYSQL_ROOT_PASSWORD: fiorano1q2w
      MYSQL_USER: fiorano
      MYSQL_PASSWORD: fiorano

  ### STORE DB
  postgres-store:
    image: postgres:15
    container_name: store-db
    ports:
      - "5433:5432"
    environment:
      POSTGRES_DB: order_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: fiorano1q2we
    volumes:
      - ./postgres-data:/var/lib/postgresql/data

  ### PRODUCT DB
  mongodb-product:
    image: mongo:latest
    container_name: product-db
    ports:
      - "27018:27017"
    environment:
      MONGO_INITDB_DATABASE: product_db
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: fiorano1q2w
    volumes:
      - ./data:/data/db

  ### ORDER DB
  mongodb-order:
    image: mongo:latest
    container_name: order-db
    ports:
      - "27019:27017"
    environment:
      MONGO_INITDB_DATABASE: order_db
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: fiorano1q2w
    volumes:
      - ./data:/data/db

  ### FILE DB
  mariadb-file:
    image: mariadb:latest
    container_name: file-db
    ports:
      - "3308:3306"
    environment:
      MYSQL_DATABASE: file_db
      MYSQL_ROOT_PASSWORD: fiorano1q2w
      MYSQL_USER: fiorano
      MYSQL_PASSWORD: fiorano
    command:
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
    restart: unless-stopped

  ### LOG DB
#  es:
#    image: docker.elastic.co/elasticsearch/elasticsearch:${ELASTIC_VER}
#    container_name: es
#    environment:
#      - node.name=es-node
#      - cluster.name=search-cluster
#      - discovery.type=single-node
#      - xpack.security.enabled=false
#      - xpack.security.http.ssl.enabled=false
#      - xpack.security.transport.ssl.enabled=false
#    ports:
#      - "9200:9200" # https
#      - "9300:9300" #tcp
#    networks:
#      - es-bridge
#
#  kibana:
#    image: docker.elastic.co/kibana/kibana:${ELASTIC_VER}
#    container_name: kibana
#    environment:
#      SERVER_NAME: kibana
#      ELASTICSEARCH_HOSTS: http://es:9200
#    ports:
#      - "5601:5601"
#    # Elasticsearch Start Dependency
#    depends_on:
#      - es
#    networks:
#      - es-bridge
#
#networks:
#  es-bridge:
#    driver: bridge
