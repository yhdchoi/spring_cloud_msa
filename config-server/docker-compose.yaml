services:
  ### KEYCLOAK DB
  mariadb-keycloak:
    image: mariadb:latest
    container_name: keycloak-db
    ports:
      - "3399:3306"
    environment:
      MARIADB_DATABASE: keycloak
      MARIADB_ROOT_PASSWORD: fiorano1q2w
      MARIADB_USER: fiorano
      MARIADB_PASSWORD: fiorano
    volumes:
      - ./container/keycloak-db/conf.d:/etc/mysql/conf.d
      - ./container/keycloak-db/data:/var/lib/mysql
    restart: unless-stopped

  ### KEYCLOAK
  keycloak:
    container_name: keycloak
    image: quay.io/keycloak/keycloak:26.2.0
    command: [ "start-dev", "--import-realm" ]
    environment:
      DB_VENDOR: MARIADB
      DB_ADDR: mariadb
      DB_DATABASE: keycloak
      DB_USER: root
      DB_PASSWORD: fiorano1q2w
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    ports:
      - "8181:8080"
    volumes:
      - ./container/keycloak/realms/:/opt/keycloak/data/import
    depends_on:
      - mariadb-keycloak

  ### ACCOUNT DB
  mariadb-account:
    image: mariadb:latest
    container_name: account-db
    ports:
      - "3307:3306"
    environment:
      MARIADB_DATABASE: account_db
      MARIADB_ROOT_PASSWORD: fiorano1q2w
      MARIADB_USER: fiorano
      MARIADB_PASSWORD: fiorano
    volumes:
      - ./container/account-db/conf.d:/etc/mysql/conf.d
      - ./container/account-db/data:/var/lib/mysql
    restart: unless-stopped

  ### STORE DB
  mongodb-store:
    image: mongo:latest
    container_name: store-db
    ports:
      - "27018:27017"
    environment:
      MONGO_INITDB_DATABASE: store_db
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: fiorano1q2w
    volumes:
      - ./container/store-db:/data/db

  ### PRODUCT DB
  mongodb-product:
    image: mongo:latest
    container_name: product-db
    ports:
      - "27019:27017"
    environment:
      MONGO_INITDB_DATABASE: product_db
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: fiorano1q2w
    volumes:
      - ./container/product-db:/data/db

  ### ORDER DB
  mongodb-order:
    image: mongo:latest
    container_name: order-db
    ports:
      - "27020:27017"
    environment:
      MONGO_INITDB_DATABASE: order_db
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: fiorano1q2w
    volumes:
      - ./container/order-db:/data/db

  ### FILE DB
  postgres-file:
    image: postgres:15
    container_name: file-db
    ports:
      - "5433:5432"
    environment:
      POSTGRES_DB: file_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: fiorano1q2we
    volumes:
      - ./container/file-db:/var/lib/postgresql/data


  #  mariadb-file:
  #    image: mariadb:latest
  #    container_name: file-db
  #    ports:
  #      - "3308:3306"
  #    environment:
  #      MARIADB_DATABASE: file_db
  #      MARIADB_ROOT_PASSWORD: fiorano1q2w
  #      MARIADB_USER: fiorano
  #      MARIADB_PASSWORD: fiorano
  #    command:
  #      - --character-set-server=utf8mb4
  #      - --collation-server=utf8mb4_unicode_ci
  #    volumes:
  #      - ./container/file-db/conf.d:/etc/mysql/conf.d
  #      - ./container/file-db/data:/var/lib/mysql
  #    restart: unless-stopped


  ### AI VECTOR DB
  #  pgvector:
  #    image: pgvector/pgvector:pg16
  #    ports:
  #      - '5440:5432'
  #    environment:
  #      POSTGRES_DB: ai_vector
  #      POSTGRES_USER: fiorano
  #      POSTGRES_PASSWORD: fiorano1q2w
  #    labels:
  #      - "org.springframework.boot.service-connection=postgres"


  ### LOG DB
#  es:
#    image: docker.elastic.co/elasticsearch/elasticsearch:${ELASTIC_VER}
#    container_name: es
#    environment:
#      - node.name=es-node
#      - cluster.name=search-cluster
#      - discovery.type=single-node
#      - xpack.security.enabled=false
#      - xpack.security.http.ssl.enabled=false
#      - xpack.security.transport.ssl.enabled=false
#    ports:
#      - "9200:9200" # https
#      - "9300:9300" #tcp
#    networks:
#      - es-bridge
#
#  kibana:
#    image: docker.elastic.co/kibana/kibana:${ELASTIC_VER}
#    container_name: kibana
#    environment:
#      SERVER_NAME: kibana
#      ELASTICSEARCH_HOSTS: http://es:9200
#    ports:
#      - "5601:5601"
#    # Elasticsearch Start Dependency
#    depends_on:
#      - es
#    networks:
#      - es-bridge
#
#networks:
#  es-bridge:
#    driver: bridge
